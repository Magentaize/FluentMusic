<Page
    x:Class="FluentMusic.Views.FullPlayerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converter="using:FluentMusic.ViewModels.Converter"
    xmlns:local="using:FluentMusic.Views"
    xmlns:cc="using:FluentMusic.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:common="using:FluentMusic.Views.Common"
    xmlns:viewmodels="using:FluentMusic.ViewModels"
    xmlns:common1="using:FluentMusic.ViewModels.Common"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

  <Page.Resources>
    <converter:PositionSliderToolTipConverter x:Key="PositionSliderToolTipConverter" />
    <Style x:Key="NavigationViewItemPresenterStyleWhenOnTopPane" TargetType="NavigationViewItemPresenter">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="NavigationViewItemPresenter">
            <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}" Control.IsTemplateFocusTarget="True">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="PointerStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="PointerOver">
                    <VisualState.Setters>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <VisualState.Setters>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="Selected">
                    <VisualState.Setters>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="PointerOverSelected">
                    <VisualState.Setters>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="PressedSelected">
                    <VisualState.Setters>
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DisabledStates">
                  <VisualState x:Name="Enabled"/>
                  <VisualState x:Name="Disabled">
                    <VisualState.Setters>
                      <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}"/>
                      <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}"/>
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                  <VisualState x:Name="IconOnLeft"/>
                  <VisualState x:Name="IconOnly">
                    <VisualState.Setters>
                      <Setter Target="PointerRectangle.Visibility" Value="Visible"/>
                      <Setter Target="LayoutRoot.Width" Value="48"/>
                      <Setter Target="ContentPresenter.Visibility" Value="Collapsed"/>
                      <Setter Target="SelectionIndicatorGrid.Margin" Value="4,0,4,4"/>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="ContentOnly">
                    <VisualState.Setters>
                      <Setter Target="IconBox.Visibility" Value="Collapsed"/>
                      <Setter Target="ContentPresenter.Margin" Value="12,0"/>
                      <Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4"/>
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
              <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed"/>
              <Grid x:Name="ContentGrid">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Viewbox x:Name="IconBox" HorizontalAlignment="Center" Height="16" Margin="16,0,0,0" VerticalAlignment="Center" Width="16">
                  <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Foreground="{ThemeResource SystemControlBackgroundAccentRevealBorderBrush}"/>
                </Viewbox>
                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Grid.Column="1" Foreground="{ThemeResource SystemControlBackgroundAccentRevealBorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="8,0,16,0" TextWrapping="NoWrap" VerticalAlignment="Center"/>
              </Grid>
              <Grid x:Name="SelectionIndicatorGrid" Margin="16,0,16,4" VerticalAlignment="Bottom">
                <Rectangle x:Name="SelectionIndicator" Fill="{ThemeResource SystemControlBackgroundAccentRevealBorderBrush}" Height="2" Opacity="0"/>
              </Grid>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="NavigationViewItem">
      <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}"/>
      <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}"/>
      <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}"/>
      <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}"/>
      <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
      <Setter Property="FontWeight" Value="Normal"/>
      <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
      <Setter Property="UseSystemFocusVisuals" Value="True"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="NavigationViewItem">
            <NavigationViewItemPresenter x:Name="NavigationViewItemPresenter" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Icon="{TemplateBinding Icon}" IsTabStop="False" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" VerticalAlignment="{TemplateBinding VerticalAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                  <VisualState x:Name="OnLeftNavigation">
                    <VisualState.Setters>
                      <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}"/>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="OnLeftNavigationReveal">
                    <VisualState.Setters>
                      <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}"/>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="OnTopNavigationPrimary">
                    <VisualState.Setters>
                      <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}"/>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="OnTopNavigationPrimaryReveal">
                    <VisualState.Setters>
                      <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}"/>
                    </VisualState.Setters>
                  </VisualState>
                  <VisualState x:Name="OnTopNavigationOverflow">
                    <VisualState.Setters>
                      <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}"/>
                    </VisualState.Setters>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </NavigationViewItemPresenter>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Page.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <UserControl Grid.Row="0">
      <NavigationView x:Name="NavigationView"
                      PaneDisplayMode="Top"
                      SelectionFollowsFocus="Enabled"
                      IsBackEnabled="False"
                      IsBackButtonVisible="Collapsed"
                      IsSettingsVisible="False">
        <NavigationView.Resources>
          <SolidColorBrush x:Key="NavigationViewTopPaneBackground" Color="Transparent"/>
          <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
        </NavigationView.Resources>

        <VisualStateManager.VisualStateGroups>
          <VisualStateGroup x:Name="IndexingStatus">
            <VisualState x:Name="IsIndexing">
              <VisualState.Storyboard>
                <Storyboard>
                  <DoubleAnimation To="28" Storyboard.TargetName="IndexingNotificationPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" EnableDependentAnimation="True">
                    <DoubleAnimation.EasingFunction>
                      <ExponentialEase Exponent="2" EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                  </DoubleAnimation>
                </Storyboard>
              </VisualState.Storyboard>
            </VisualState>
            <VisualState x:Name="IsNotIndexing">
              <VisualState.Storyboard>
                <Storyboard>
                  <DoubleAnimation To="0" Storyboard.TargetName="IndexingNotificationPanel" Storyboard.TargetProperty="Height" Duration="0:0:0.3" EnableDependentAnimation="True">
                    <DoubleAnimation.EasingFunction>
                      <ExponentialEase Exponent="2" EasingMode="EaseOut" />
                    </DoubleAnimation.EasingFunction>
                  </DoubleAnimation>
                </Storyboard>
              </VisualState.Storyboard>
            </VisualState>
          </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <interactivity:Interaction.Behaviors>
          <Core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsIndexing, Mode=OneWay}" Value="True">
            <Core:GoToStateAction StateName="IsIndexing"/>
          </Core:DataTriggerBehavior>
          <Core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsIndexing, Mode=OneWay}" Value="False">
            <Core:GoToStateAction StateName="IsNotIndexing"/>
          </Core:DataTriggerBehavior>
        </interactivity:Interaction.Behaviors>

        <NavigationView.MenuItemTemplate>
          <DataTemplate x:DataType="common1:NavigationViewItemViewModel">
            <NavigationViewItem Content="{x:Bind Name}" FontSize="22"/>
          </DataTemplate>
        </NavigationView.MenuItemTemplate>

        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <StackPanel x:Name="IndexingNotificationPanel" 
                      Grid.Row="0"
                      Height="0"
                      Background="{ThemeResource SystemAccentColor}"
                      Orientation="Horizontal">
            <Viewbox Margin="4,0,4,0"
                     Height="16" 
                     Width="16">
              <FontIcon HorizontalAlignment="Center" 
                      VerticalAlignment="Center" 
                      FontFamily="{StaticResource SymbolThemeFontFamily}" 
                      Glyph="&#xE895;" />
            </Viewbox>
            <TextBlock Text="Indexing" VerticalAlignment="Center" Margin="0,4,0,4"/>
          </StackPanel>
          
          <Frame x:Name="NavigationContentFrame" Grid.Row="1"/>
        </Grid>
      </NavigationView>
    </UserControl>

    <Grid Grid.Row="1">
      <Grid Margin="0,19.2,0,0" Height="70">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal">
          <common:PlaybackInfoCover/>
          <common:PlaybackInfoText VerticalAlignment="Center" Margin="10,0,0,0"/>
        </StackPanel>

        <local:PlaybackControllerView Grid.Column="1" HorizontalAlignment="Center"/>

        <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
          <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
            <TextBlock Text="{x:Bind ViewModel.CurrentPosition, Mode=OneWay}" />
            <TextBlock Text="/"/>
            <TextBlock Text="{x:Bind ViewModel.NaturalPosition, Mode=OneWay}"/>
          </StackPanel>

          <Button Style="{StaticResource PlaybackControllerButton}">
            <Button.Content>
              <FontIcon HorizontalAlignment="Center" 
                      VerticalAlignment="Center" 
                      FontFamily="{StaticResource SymbolThemeFontFamily}" 
                      Glyph="&#xE767;" />
            </Button.Content>

            <Button.Flyout>
              <Flyout FlyoutPresenterStyle="{StaticResource BaseFlyoutPresenter}">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                  <common:VolumeSlider x:Name="VolumeSlider"
                                     Orientation="Vertical"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Height="140"/>
                  <TextBlock Text="{x:Bind VolumeSlider.Value, Mode=OneWay}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                </StackPanel>
              </Flyout>
            </Button.Flyout>
          </Button>
        </StackPanel>
      </Grid>

      <local:PlaybackSlider VerticalAlignment="Top"/>
    </Grid>
  </Grid>
</Page>
